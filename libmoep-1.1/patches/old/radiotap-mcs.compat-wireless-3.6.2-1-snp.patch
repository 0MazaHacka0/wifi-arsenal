diff -Naur compat-wireless-3.6.6-1-snp/net/mac80211/tx.c commoep/net/mac80211/tx.c
--- compat-wireless-3.6.6-1-snp/net/mac80211/tx.c	2012-11-15 15:18:36.882294878 +0100
+++ commoep/net/mac80211/tx.c	2012-11-15 15:16:49.802293569 +0100
@@ -789,11 +789,23 @@
 	u16 bitrate;
 	s8 idx;
 	int i;
-
+	/* set legacy bit rate */
 	sband = tx->local->hw.wiphy->bands[tx->channel->band];
-
+	/* bitrate MUST be read before setting info->control.rates (union) */
 	bitrate = info->control.bitrate;
 
+	/* one fixed rate is demanded */
+	info->control.rates[0].count = 1;
+	for (i = 1; i < IEEE80211_TX_MAX_RATES; i++)
+		info->control.rates[i].idx = -1;
+
+	if (info->control.rates[0].flags & IEEE80211_TX_RC_MCS) {
+		/* everything should be done */
+		if (0 > info->control.rates[0].idx)
+			return TX_DROP;
+		return TX_CONTINUE;
+	}
+
 	idx = -1;
 	for (i = 0; i < sband->n_bitrates; i++) {
 		if (sband->bitrates[i].bitrate > bitrate)
@@ -807,12 +819,8 @@
 		return TX_DROP;
 
 	info->control.rates[0].idx = idx;
-	info->control.rates[0].count = 1;
 	info->control.rates[0].flags = 0;
 
-	for (i = 1; i < IEEE80211_TX_MAX_RATES; i++)
-		info->control.rates[i].idx = -1;
-
 	return TX_CONTINUE;
 }
 
@@ -1539,6 +1547,7 @@
 	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
 	int ret = ieee80211_radiotap_iterator_init(&iterator, rthdr, skb->len,
 						   NULL);
+	u8  known,flags,mcs;
 	u16 txflags;
 
 	info->flags |= IEEE80211_TX_INTFL_DONT_ENCRYPT |
@@ -1595,6 +1604,32 @@
 			info->control.bitrate = *iterator.this_arg * 5;
 			break;
 
+		case IEEE80211_RADIOTAP_MCS:
+			known = *iterator.this_arg;
+			flags = *(iterator.this_arg + 1);
+			mcs   = *(iterator.this_arg + 2);
+
+			if (known & IEEE80211_RADIOTAP_MCS_HAVE_BW) {
+				if ((flags&0x03)==IEEE80211_RADIOTAP_MCS_BW_40)
+					info->control.rates[0].flags |= 
+						IEEE80211_TX_RC_40_MHZ_WIDTH;
+			}
+
+			if (known & IEEE80211_RADIOTAP_MCS_HAVE_MCS) {
+				info->flags |= 
+					IEEE80211_TX_CTL_HAS_VALID_BITRATE;
+				info->control.rates[0].flags |= 
+						IEEE80211_TX_RC_MCS;
+				info->control.rates[0].idx = mcs;
+			}
+
+			if (known & IEEE80211_RADIOTAP_MCS_HAVE_GI) {
+				if (flags & IEEE80211_RADIOTAP_MCS_SGI)
+					info->control.rates[0].flags |= 
+						IEEE80211_TX_RC_SHORT_GI;
+			}
+			break;
+
 		/*
 		 * Please update the file
 		 * Documentation/networking/mac80211-injection.txt
@@ -1648,9 +1683,9 @@
 	 * radar detection by itself. We can do that later by adding a
 	 * monitor flag interfaces used for AP support.
 	 */
-	if ((chan->flags & (IEEE80211_CHAN_NO_IBSS | IEEE80211_CHAN_RADAR |
-	     IEEE80211_CHAN_PASSIVE_SCAN)))
-		goto fail;
+//	if ((chan->flags & (IEEE80211_CHAN_NO_IBSS | IEEE80211_CHAN_RADAR |
+//	     IEEE80211_CHAN_PASSIVE_SCAN)))
+//		goto fail;
 
 	/* check for not even having the fixed radiotap header part */
 	if (unlikely(skb->len < sizeof(struct ieee80211_radiotap_header)))
@@ -1739,7 +1774,6 @@
 
 	ieee80211_xmit(sdata, skb);
 	rcu_read_unlock();
-
 	return NETDEV_TX_OK;
 
 fail:
diff -Naur compat-wireless-3.6.6-1-snp/net/wireless/radiotap.c commoep/net/wireless/radiotap.c
--- compat-wireless-3.6.6-1-snp/net/wireless/radiotap.c	2012-11-07 17:20:26.000000000 +0100
+++ commoep/net/wireless/radiotap.c	2012-11-15 13:58:14.602139134 +0100
@@ -41,6 +41,7 @@
 	[IEEE80211_RADIOTAP_TX_FLAGS] = { .align = 2, .size = 2, },
 	[IEEE80211_RADIOTAP_RTS_RETRIES] = { .align = 1, .size = 1, },
 	[IEEE80211_RADIOTAP_DATA_RETRIES] = { .align = 1, .size = 1, },
+	[IEEE80211_RADIOTAP_MCS] = { .align = 1, .size = 3, },
 	/*
 	 * add more here as they are defined in radiotap.h
 	 */
